/* main.css */

.main-container h1 {
    color: black;
}

.cards {
    max-width: 1500px;
    /* Increased max-width for a wider card */
    width: 100%;
    margin: 40px auto;
    padding: 20px;
    border-radius: 15px;
    box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);
    background-color: #f9f9f9;
    display: flex;
    justify-content: center;
    align-items: center;
}

.content {
    width: 100%;
    /* This will make .content fill the .card */
    max-width: 100%;
    /* Adjust to not exceed the width of .card */
    padding: 20px;
    border-radius: 8px;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    background-color: #fff;
    transition: opacity 2s ease-in-out;
}

.main-container h1 {
    color: #000000;
    text-align: center;
    font-size: 40px;
    /* Adjust this value to make the text smaller */
}


textarea {
    width: 100%;
    /* Maintain the width to ensure padding and aesthetics */
    padding: 10px;
    margin-bottom: 20px;
    border-radius: 4px;
    border: 1px solid #ccc;
    resize: vertical;
    font-size: 16px;
    box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.1);
}

.fade-in {
    animation: fadeIn 2s;
}

.fade-out {
    animation: fadeOut 2s;
}

@keyframes fadeIn {
    from {
        opacity: 0;
    }

    to {
        opacity: 1;
    }
}

@keyframes fadeOut {
    from {
        opacity: 1;
    }

    to {
        opacity: 0;
    }
}

@keyframes fadeInOnly {
    from { opacity: 0; }
    to { opacity: 1; }
}

.fade-in-only {
    animation: fadeInOnly 2s forwards; /* Use 'forwards' to keep the state at the end of the animation */
}